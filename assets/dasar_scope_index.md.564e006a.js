import{_ as a,c as s,o as n,a as p}from"./app.bf21e1c1.js";const d=JSON.parse('{"title":"Scope","description":"","frontmatter":{},"headers":[],"relativePath":"dasar/scope/index.md"}'),l={name:"dasar/scope/index.md"},o=p(`<h1 id="scope" tabindex="-1">Scope <a class="header-anchor" href="#scope" aria-hidden="true">#</a></h1><p>Setiap variable atau fungsi hanya bisa diakses pada scope yang sama atau scope yang lebih luas.</p><div class="language-dart"><button class="copy"></button><span class="lang">dart</span><pre><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#A6ACCD;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;Jamil&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(name)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// Jamil dapat diakses karena berada pada scope yang sama</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">printName</span><span style="color:#A6ACCD;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(name)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// Jamil (karena bisa mengakses variable name pada scope yang lebih luas)</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> variableScopeLocal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">&quot;Variable Scope Local&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(variableScopeLocal)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// Error: variableScopeLocal tidak dikenali karena berbeda scope</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">printName</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// dapat diakses karena scope nya sama</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span></code></pre></div>`,3),e=[o];function c(t,r,A,i,C,y){return n(),s("div",null,e)}const F=a(l,[["render",c]]);export{d as __pageData,F as default};
